# load libraries and packages
install.packages("meltt")
library(meltt)
library(readr)
library(dplyr)
# load data
ABforMELTT <- read_csv("ABforMELTT.csv")
APforMELTT <- read_csv("APforMELTT.csv")
ATforMELTT <- read_csv("ATforMELTT.csv")
# initialize list for storing the taxonommies
tax_ls <- list()
# Related case taxonomy
tax_ls$relcase_tax <- create_taxbase('relcase_tax')
create_taxbase <-  function(col){
# function for creating the base of the taxonomy
# define categories
all_categories <- unique(c(
ABforMELTT[[col]],
APforMELTT[[col]],
ATforMELTT[[col]]
))
#define data sources
data_sources <- c("ABforMELTT", "APforMELTT", "ATforMELTT")
# create cross-product of categories and sources
expanded_tax <- expand.grid(
data.source = data_sources,
base.categories = all_categories,
stringsAsFactors = FALSE
)
return(expanded_tax)
}
# Related case taxonomy
tax_ls$relcase_tax <- create_taxbase('relcase_tax')
tax_ls$relcase_tax$make_level1 <- ifelse(is.na(tax_ls$relcase_tax$base.categories), "isNA", "notNA")
# victims taxonomy
tax_ls$victims_tax <- create_taxbase('victims_tax')
tax_ls$victims_tax$make_level1 <-
ifelse(tax_ls$victims_tax$base.categories > 0, "victims", "no victims")
View(tax_ls)
View(tax_ls[["relcase_tax"]])
View(tax_ls[["victims_tax"]])
force_datetime <- function(df){
df$date <- as.Date(df$date)
df$date <- format(df$date, "%Y-%m-%d 00:00:00")
df$date <- as.Date(df$date, format = "%Y-%m-%d %H:%M:%S")
}
force_datetime <- function(df){
df$date <- as.Date(df$date)
df$date <- format(df$date, "%Y-%m-%d 00:00:00")
df$date <- as.Date(df$date, format = "%Y-%m-%d %H:%M:%S")
return(df)
}
# format date columns
ABforMELTT <- force_datetime(ABforMELTT)
APforMELTT <- force_datetime(APforMELTT)
ATforMELTT <- force_datetime(ATforMELTT)
# apply meltt
output_siecvac3 <- meltt(ABforMELTT, APforMELTT,ATforMELTT,
taxonomies = tax_ls,
spatwindow = 10,
twindow = 2)
# Remove rows with missing dates
ABforMELTT <- ABforMELTT %>% filter(!is.na(date)) #only 1 get removed (31.9)
APforMELTT <- APforMELTT %>% filter(!is.na(date))
ATforMELTT <- ATforMELTT %>% filter(!is.na(date))
# apply meltt
output_siecvac3 <- meltt(ABforMELTT, APforMELTT,ATforMELTT,
taxonomies = tax_ls,
spatwindow = 10,
twindow = 2)
View(output_siecvac3)
summary(output_siecvac3)
plot(output_siecvac3)
# plot output
plot(output_siecvac3)
mplot(output_siecvac3)
# plot map
plot(output_siecvac3,matching = TRUE)
# plot map
mplot(output_siecvac3,matching = TRUE)
# plot map
meltt_dup <- meltt_duplicates(output_siecvac3)
mplot(meltt_dup,matching = TRUE)
mplot(output_siecvac3,matching = TRUE)
View(output_siecvac3[["processed"]][["deduplicated_index"]])
plot map
# plot map
#meltt_dup <- meltt_duplicates(output_siecvac3)
#mplot(output_siecvac3,matching = TRUE)
library(meltt)
library(meltt)
library(readr)
library(dplyr)
# define functions
create_taxbase <-  function(col){
# function for creating the base of the taxonomy
# define categories
all_categories <- unique(c(
ABforMELTT[[col]],
APforMELTT[[col]],
ATforMELTT[[col]]
))
#define data sources
data_sources <- c("ABforMELTT", "APforMELTT", "ATforMELTT")
# create cross-product of categories and sources
expanded_tax <- expand.grid(
data.source = data_sources,
base.categories = all_categories,
stringsAsFactors = FALSE
)
return(expanded_tax)
}
force_datetime <- function(df){
df$date <- as.Date(df$date)
df$date <- format(df$date, "%Y-%m-%d 00:00:00")
df$date <- as.Date(df$date, format = "%Y-%m-%d %H:%M:%S")
return(df)
}
# load data
ABforMELTT <- read_csv("ABforMELTT.csv")
APforMELTT <- read_csv("APforMELTT.csv")
ATforMELTT <- read_csv("ATforMELTT.csv")
# create taxonomies
# initialize list for storing the taxonommies
tax_ls <- list()
# Related case taxonomy
tax_ls$relcase_tax <- create_taxbase('relcase_tax')
tax_ls$relcase_tax$make_level1 <- ifelse(is.na(tax_ls$relcase_tax$base.categories), "isNA", "notNA")
# victims taxonomy
tax_ls$victims_tax <- create_taxbase('victims_tax')
tax_ls$victims_tax$make_level1 <-
ifelse(tax_ls$victims_tax$base.categories > 0, "victims", "no victims")
# format date columns
ABforMELTT <- force_datetime(ABforMELTT)
APforMELTT <- force_datetime(APforMELTT)
ATforMELTT <- force_datetime(ATforMELTT)
# Remove rows with missing dates
ABforMELTT <- ABforMELTT %>% filter(!is.na(date)) #only 1 get removed (31.9)
APforMELTT <- APforMELTT %>% filter(!is.na(date))
ATforMELTT <- ATforMELTT %>% filter(!is.na(date))
# apply meltt
output_siecvac <- meltt(ABforMELTT, APforMELTT,ATforMELTT,
taxonomies = tax_ls,
spatwindow = 10,
twindow = 2)
# plot output
plot(output_siecvac)
# plot map
#meltt_dup <- meltt_duplicates(output_siecvac3)
mplot(output_siecvac,matching = TRUE)
# plot map
#meltt_dup <- meltt_duplicates(output_siecvac3)
mplot(output_siecvac)
# plot map
#meltt_dup <- meltt_duplicates(output_siecvac3)
mplot(output_siecvac, matching = TRUE)
# plot map
meltt_dup <- meltt_duplicates(output_siecvac3)
View(meltt_dup)
output_siecvac
# export
uevents <- meltt_data(output_siecvac, columns = c("date","latitude", "longitude","victims_tax",
"clash_tax", "govattack_tax","guerrattack_tax","parattack_tax","posdattack_tax"))
# export
uevents <- meltt_data(output_siecvac, columns = c("date","latitude", "longitude","relcase_tax","victims_tax",
"clash_tax", "govattack_tax","guerrattack_tax","parattack_tax","posdattack_tax"))
write.csv(uevents,"matchedevents.csv")
View(uevents)
View(ABforMELTT)
len(ABforMELTT)
nrow(ABforMELTT)
# Redefine event column
ABforMELTT$event <- 1:nrow(ABforMELTT)
View(ABforMELTT)
APforMELTT$event <- 1:nrow(APforMELTT)
ATforMELTT$event <- 1:nrow(ATforMELTT)
# apply meltt
output_siecvac <- meltt(ABforMELTT, APforMELTT,ATforMELTT,
taxonomies = tax_ls,
spatwindow = 10,
twindow = 2)
# plot output
plot(output_siecvac)
mplot(output_siecvac, matching=TRUE)
# save duplicates
meltt_dup <- meltt_duplicates(output_siecvac3)
# export
uevents <- meltt_data(output_siecvac, columns = c("date","latitude", "longitude","relcase_tax","victims_tax",
"clash_tax", "govattack_tax","guerrattack_tax","parattack_tax","posdattack_tax"))
write.csv(uevents,"matchedevents.csv")
View(uevents)
create_taxbase <-  function(col){
# function for creating the base of the taxonomy
# define categories
all_categories <- unique(c(
ABforMELTT[[col]],
APforMELTT[[col]],
ATforMELTT[[col]]
))
#define data sources
data_sources <- c("ABforMELTT", "APforMELTT", "ATforMELTT")
# create cross-product of categories and sources
expanded_tax <- expand.grid(
data.source = data_sources,
base.categories = all_categories,
stringsAsFactors = FALSE
)
return(expanded_tax)
}
force_datetime <- function(df){
df$date <- as.Date(df$date)
df$date <- format(df$date, "%Y-%m-%d 00:00:00")
df$date <- as.Date(df$date, format = "%Y-%m-%d %H:%M:%S")
return(df)
}
# load data
ABforMELTT <- read_csv("ABforMELTT.csv")
APforMELTT <- read_csv("APforMELTT.csv")
ATforMELTT <- read_csv("ATforMELTT.csv")
# create taxonomies
# initialize list for storing the taxonommies
tax_ls <- list()
# Related case taxonomy
tax_ls$relcase_tax <- create_taxbase('relcase_tax')
tax_ls$relcase_tax$make_level1 <- ifelse(is.na(tax_ls$relcase_tax$base.categories), "isNA", "notNA")
# victims taxonomy
tax_ls$victims_tax <- create_taxbase('victims_tax')
tax_ls$victims_tax$make_level1 <-
ifelse(tax_ls$victims_tax$base.categories > 0, "victims", "no victims")
# format date columns
ABforMELTT <- force_datetime(ABforMELTT)
APforMELTT <- force_datetime(APforMELTT)
ATforMELTT <- force_datetime(ATforMELTT)
# Remove rows with missing dates
ABforMELTT <- ABforMELTT %>% filter(!is.na(date)) #only 1 get removed (31.9)
APforMELTT <- APforMELTT %>% filter(!is.na(date))
ATforMELTT <- ATforMELTT %>% filter(!is.na(date))
# Redefine event column
ABforMELTT$event <- 1:nrow(ABforMELTT)
APforMELTT$event <- 1:nrow(APforMELTT)
ATforMELTT$event <- 1:nrow(ATforMELTT)
# apply meltt
output_siecvac <- meltt(ABforMELTT, APforMELTT,ATforMELTT,
taxonomies = tax_ls,
spatwindow = 10,
twindow = 2)
# plot output
plot(output_siecvac)
# save duplicates
meltt_dup <- meltt_duplicates(output_siecvac3)
# export
uevents <- meltt_data(output_siecvac, columns = c("date","latitude", "longitude","relcase_tax","victims_tax",
"clash_tax", "govattack_tax","guerrattack_tax","parattack_tax","posdattack_tax"))
# export
uevents <- meltt_data(output_siecvac, columns = c("date","latitude", "longitude","relcase_tax","victims_tax",
"clash_tax", "govattack_tax","guerrattack_tax","parattack_tax","posdattack_tax",'c_digo_dane_de_municipio'))
View(uevents)
create_taxbase <-  function(col){
# function for creating the base of the taxonomy
# define categories
all_categories <- unique(c(
ABforMELTT[[col]],
APforMELTT[[col]],
ATforMELTT[[col]]
))
#define data sources
data_sources <- c("ABforMELTT", "APforMELTT", "ATforMELTT")
# create cross-product of categories and sources
expanded_tax <- expand.grid(
data.source = data_sources,
base.categories = all_categories,
stringsAsFactors = FALSE
)
return(expanded_tax)
}
force_datetime <- function(df){
df$date <- as.Date(df$date)
df$date <- format(df$date, "%Y-%m-%d 00:00:00")
df$date <- as.Date(df$date, format = "%Y-%m-%d %H:%M:%S")
return(df)
}
# load data
ABforMELTT <- read_csv("ABforMELTT.csv")
APforMELTT <- read_csv("APforMELTT.csv")
ATforMELTT <- read_csv("ATforMELTT.csv")
# create taxonomies
# initialize list for storing the taxonommies
tax_ls <- list()
# Related case taxonomy
tax_ls$relcase_tax <- create_taxbase('relcase_tax')
tax_ls$relcase_tax$make_level1 <- ifelse(is.na(tax_ls$relcase_tax$base.categories), "isNA", "notNA")
# victims taxonomy
tax_ls$victims_tax <- create_taxbase('victims_tax')
tax_ls$victims_tax$make_level1 <-
ifelse(tax_ls$victims_tax$base.categories > 0, "victims", "no victims")
# format date columns
ABforMELTT <- force_datetime(ABforMELTT)
APforMELTT <- force_datetime(APforMELTT)
ATforMELTT <- force_datetime(ATforMELTT)
# Remove rows with missing dates
ABforMELTT <- ABforMELTT %>% filter(!is.na(date)) #only 1 get removed (31.9)
APforMELTT <- APforMELTT %>% filter(!is.na(date))
ATforMELTT <- ATforMELTT %>% filter(!is.na(date))
# Redefine event column
ABforMELTT$event <- 1:nrow(ABforMELTT)
APforMELTT$event <- 1:nrow(APforMELTT)
ATforMELTT$event <- 1:nrow(ATforMELTT)
# apply meltt
output_siecvac <- meltt(ABforMELTT, APforMELTT,ATforMELTT,
taxonomies = tax_ls,
spatwindow = 10,
twindow = 2)
# plot output
plot(output_siecvac)
# save duplicates
meltt_dup <- meltt_duplicates(output_siecvac3)
# export
uevents <- meltt_data(output_siecvac, columns = c("date","latitude", "longitude","relcase_tax","victims_tax",
"clash_tax", "govattack_tax","guerrattack_tax","parattack_tax","posdattack_tax",'c_digo_dane_de_municipio','year'))
create_taxbase <-  function(col){
# function for creating the base of the taxonomy
# define categories
all_categories <- unique(c(
ABforMELTT[[col]],
APforMELTT[[col]],
ATforMELTT[[col]]
))
#define data sources
data_sources <- c("ABforMELTT", "APforMELTT", "ATforMELTT")
# create cross-product of categories and sources
expanded_tax <- expand.grid(
data.source = data_sources,
base.categories = all_categories,
stringsAsFactors = FALSE
)
return(expanded_tax)
}
force_datetime <- function(df){
df$date <- as.Date(df$date)
df$date <- format(df$date, "%Y-%m-%d 00:00:00")
df$date <- as.Date(df$date, format = "%Y-%m-%d %H:%M:%S")
return(df)
}
# load data
ABforMELTT <- read_csv("ABforMELTT.csv")
APforMELTT <- read_csv("APforMELTT.csv")
ATforMELTT <- read_csv("ATforMELTT.csv")
# create taxonomies
# initialize list for storing the taxonommies
tax_ls <- list()
# Related case taxonomy
tax_ls$relcase_tax <- create_taxbase('relcase_tax')
tax_ls$relcase_tax$make_level1 <- ifelse(is.na(tax_ls$relcase_tax$base.categories), "isNA", "notNA")
# victims taxonomy
tax_ls$victims_tax <- create_taxbase('victims_tax')
tax_ls$victims_tax$make_level1 <-
ifelse(tax_ls$victims_tax$base.categories > 0, "victims", "no victims")
# format date columns
ABforMELTT <- force_datetime(ABforMELTT)
APforMELTT <- force_datetime(APforMELTT)
ATforMELTT <- force_datetime(ATforMELTT)
# Remove rows with missing dates
ABforMELTT <- ABforMELTT %>% filter(!is.na(date)) #only 1 get removed (31.9)
APforMELTT <- APforMELTT %>% filter(!is.na(date))
ATforMELTT <- ATforMELTT %>% filter(!is.na(date))
# Redefine event column
ABforMELTT$event <- 1:nrow(ABforMELTT)
APforMELTT$event <- 1:nrow(APforMELTT)
ATforMELTT$event <- 1:nrow(ATforMELTT)
# apply meltt
output_siecvac <- meltt(ABforMELTT, APforMELTT,ATforMELTT,
taxonomies = tax_ls,
spatwindow = 10,
twindow = 2)
# plot output
plot(output_siecvac)
# save duplicates
meltt_dup <- meltt_duplicates(output_siecvac3)
# export
uevents <- meltt_data(output_siecvac, columns = c("date","latitude", "longitude","relcase_tax","victims_tax",
"clash_tax", "govattack_tax","guerrattack_tax","parattack_tax","posdattack_tax",'c_digo_dane_de_municipio','year'))
View(uevents)
write.csv(uevents,"matchedevents.csv")
library(meltt)
library(readr)
library(dplyr)
create_taxbase <-  function(col){
# function for creating the base of the taxonomy
# define categories
all_categories <- unique(c(
ABforMELTT[[col]],
APforMELTT[[col]],
ATforMELTT[[col]]
))
#define data sources
data_sources <- c("ABforMELTT", "APforMELTT", "ATforMELTT")
# create cross-product of categories and sources
expanded_tax <- expand.grid(
data.source = data_sources,
base.categories = all_categories,
stringsAsFactors = FALSE
)
return(expanded_tax)
}
force_datetime <- function(df){
df$date <- as.Date(df$date)
df$date <- format(df$date, "%Y-%m-%d 00:00:00")
df$date <- as.Date(df$date, format = "%Y-%m-%d %H:%M:%S")
return(df)
}
# load data
ABforMELTT <- read_csv("ABforMELTT.csv")
APforMELTT <- read_csv("APforMELTT.csv")
ATforMELTT <- read_csv("ATforMELTT.csv")
# create taxonomies
# initialize list for storing the taxonommies
tax_ls <- list()
# Related case taxonomy
tax_ls$relcase_tax <- create_taxbase('relcase_tax')
tax_ls$relcase_tax$make_level1 <- ifelse(is.na(tax_ls$relcase_tax$base.categories), "isNA", "notNA")
# victims taxonomy
tax_ls$victims_tax <- create_taxbase('victims_tax')
tax_ls$victims_tax$make_level1 <-
ifelse(tax_ls$victims_tax$base.categories > 0, "victims", "no victims")
# format date columns
ABforMELTT <- force_datetime(ABforMELTT)
APforMELTT <- force_datetime(APforMELTT)
ATforMELTT <- force_datetime(ATforMELTT)
# Remove rows with missing dates
ABforMELTT <- ABforMELTT %>% filter(!is.na(date)) #only 1 get removed (31.9)
APforMELTT <- APforMELTT %>% filter(!is.na(date))
ATforMELTT <- ATforMELTT %>% filter(!is.na(date))
# Redefine event column
ABforMELTT$event <- 1:nrow(ABforMELTT)
APforMELTT$event <- 1:nrow(APforMELTT)
ATforMELTT$event <- 1:nrow(ATforMELTT)
# apply meltt
output_siecvac <- meltt(ABforMELTT, APforMELTT,ATforMELTT,
taxonomies = tax_ls,
spatwindow = 10,
twindow = 2)
# plot output
plot(output_siecvac)
tplot(output_siecvac, time_unit="days")
?tplot
tplot(output_siecvac, time_unit="years")
output_siecvac
# apply meltt
output_siecvac <- meltt(ABforMELTT, APforMELTT,ATforMELTT,
taxonomies = tax_ls,
spatwindow = 5,
twindow = 2)
output_siecvac
